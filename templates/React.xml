<templateSet group="React">
  <template name="idx" value="import Component from './$MainFile$';&#10;export default Component;&#10;" description="index file" toReformat="false" toShortenFQNames="true">
    <variable name="MainFile" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cmp" value="import React, { PureComponent } from 'react';&#10;import propTypes from 'prop-types';&#10;import cn from 'classnames';&#10;&#10;import s from './$NAME$.pcss';&#10;&#10;export default class $CAPITALIZE_NAME$ extends PureComponent {&#10;  static propTypes = {&#10;    className: propTypes.string,&#10;  };&#10;&#10;  render() {&#10;    const { className } = this.props;&#10;&#10;    return (&#10;      &lt;div&#10;        className={cn(&#10;          s.$CAPITALIZE_NAME$,&#10;          className,&#10;        )}&#10;      &gt;&#10;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;}&#10;&#10;" description="Component backbone" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <variable name="CAPITALIZE_NAME" expression="capitalize(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JSX_HTML" value="true" />
    </context>
  </template>
  <template name="pt" value="propTypes." description="propTypes" toReformat="false" toShortenFQNames="true" />
  <template name="pts:name:type" value="propTypes.shape({&#10;    $name$: propTypes.$type$,&#10;})" description="propTypes.shape" toReformat="false" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="type" expression="" defaultValue="" alwaysStopAt="true" />
  </template>
</templateSet>